buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.avast.gradle:gradle-docker-compose-plugin:0.8.13'
    }
}

apply plugin: com.avast.gradle.dockercompose.DockerComposePlugin

def services = []

fileTree(buildscript.sourceFile.parent).matching { include 'docker-compose-**.yml' }.visit {
    services += it.name.substring(it.name.lastIndexOf('-') + 1, it.name.lastIndexOf('.'))
}

services.each { service ->
    tasks.create(name: "start${service.capitalize()}", group: 'docker') {
        doFirst {
            dockerCompose.useComposeFiles += "${buildscript.sourceFile.parent}${File.separator}docker-compose-${service}.yml"
        }
        finalizedBy composeUp
    }

    tasks.create(name: "stop${service.capitalize()}", group: 'docker') {
        doFirst {
            dockerCompose.useComposeFiles += "${buildscript.sourceFile.parent}${File.separator}docker-compose-${service}.yml"
        }
        finalizedBy composeDown
    }
}

task startAll(group: 'docker') {
    services.each { service ->
        dependsOn += "start${service.capitalize()}"
    }
}

task stopAll(group: 'docker') {
    services.each { service ->
        dependsOn += "stop${service.capitalize()}"
    }
}
